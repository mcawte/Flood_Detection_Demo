apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: minio
  annotations:
    description: "MinIO Object Storage for Flood Detection System"
    tags: "minio,storage,s3"
    iconClass: "icon-database"
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: minio-secrets
    labels:
      app: minio
      component: storage
  type: Opaque
  data:
    root-user: ${MINIO_ROOT_USER_B64}
    root-password: ${MINIO_ROOT_PASSWORD_B64}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: minio-config
    labels:
      app: minio
      component: storage
  data:
    MINIO_BROWSER: "on"
    MINIO_DOMAIN: ${MINIO_DOMAIN}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: minio-data
    labels:
      app: minio
      component: storage
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${STORAGE_SIZE}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: minio
    labels:
      app: minio
      component: storage
  spec:
    replicas: 1
    selector:
      app: minio
      deploymentconfig: minio
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: minio
          deploymentconfig: minio
          component: storage
      spec:
        containers:
        - name: minio
          image: minio/minio:${MINIO_VERSION}
          args:
          - server
          - /data
          - --console-address
          - ":9001"
          ports:
          - containerPort: 9000
            protocol: TCP
            name: api
          - containerPort: 9001
            protocol: TCP
            name: console
          env:
          - name: MINIO_ROOT_USER
            valueFrom:
              secretKeyRef:
                name: minio-secrets
                key: root-user
          - name: MINIO_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: minio-secrets
                key: root-password
          envFrom:
          - configMapRef:
              name: minio-config
          resources:
            requests:
              memory: ${MEMORY_REQUEST}
              cpu: ${CPU_REQUEST}
            limits:
              memory: ${MEMORY_LIMIT}
              cpu: ${CPU_LIMIT}
          volumeMounts:
          - name: minio-data
            mountPath: /data
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 15
            periodSeconds: 10
        - name: minio-mc
          image: minio/mc:${MC_VERSION}
          command:
          - /bin/sh
          - -c
          - |
            sleep 10
            mc alias set myminio http://localhost:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD
            mc mb myminio/flood-predictions --ignore-existing
            mc mb myminio/flood-models --ignore-existing
            mc policy set public myminio/flood-predictions
            mc policy set public myminio/flood-models
            echo "Buckets created successfully"
            sleep infinity
          env:
          - name: MINIO_ROOT_USER
            valueFrom:
              secretKeyRef:
                name: minio-secrets
                key: root-user
          - name: MINIO_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: minio-secrets
                key: root-password
        volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: minio-data
        restartPolicy: Always
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: minio
    labels:
      app: minio
      component: storage
  spec:
    ports:
    - name: api
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: minio
      deploymentconfig: minio
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    name: minio-console
    labels:
      app: minio
      component: storage
  spec:
    ports:
    - name: console
      port: 9001
      protocol: TCP
      targetPort: 9001
    selector:
      app: minio
      deploymentconfig: minio
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: minio-api
    labels:
      app: minio
      component: storage
  spec:
    host: ${MINIO_API_HOSTNAME}
    to:
      kind: Service
      name: minio
      weight: 100
    port:
      targetPort: api
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: minio-console
    labels:
      app: minio
      component: storage
  spec:
    host: ${MINIO_CONSOLE_HOSTNAME}
    to:
      kind: Service
      name: minio-console
      weight: 100
    port:
      targetPort: console
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
parameters:
- name: MINIO_VERSION
  description: "MinIO Docker image version"
  value: "latest"
  required: true
- name: MC_VERSION
  description: "MinIO Client Docker image version"
  value: "latest"
  required: true
- name: MINIO_ROOT_USER_B64
  description: "MinIO root user (base64 encoded)"
  value: "bWluaW9hZG1pbg=="
  required: true
- name: MINIO_ROOT_PASSWORD_B64
  description: "MinIO root password (base64 encoded)"
  value: "bWluaW9hZG1pbjEyMw=="
  required: true
- name: MINIO_DOMAIN
  description: "MinIO domain"
  value: ""
- name: MINIO_API_HOSTNAME
  description: "MinIO API route hostname"
  value: ""
- name: MINIO_CONSOLE_HOSTNAME
  description: "MinIO Console route hostname"
  value: ""
- name: STORAGE_SIZE
  description: "Storage size for MinIO data"
  value: "10Gi"
  required: true
- name: MEMORY_REQUEST
  description: "Memory request"
  value: "512Mi"
  required: true
- name: MEMORY_LIMIT
  description: "Memory limit"
  value: "1Gi"
  required: true
- name: CPU_REQUEST
  description: "CPU request"
  value: "200m"
  required: true
- name: CPU_LIMIT
  description: "CPU limit"
  value: "500m"
  required: true