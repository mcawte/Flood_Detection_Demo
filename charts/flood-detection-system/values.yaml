# Global configuration
global:
  imagePullSecrets: []
  storageClass: ""
  namespace: flood-detection

# Backend configuration
flood-detection-backend:
  enabled: true
  image:
    repository: flood-detection-backend
    tag: "latest"
    pullPolicy: IfNotPresent

  resources:
    requests:
      memory: "2Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
      cpu: "2000m"

  env:
    MINIO_ENDPOINT: "http://minio:9000"
    PYTHONPATH: "/app"

# Frontend configuration
flood-detection-frontend:
  enabled: true
  image:
    repository: flood-detection-frontend
    tag: "latest"
    pullPolicy: IfNotPresent

  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "500m"

# n8n workflow engine
n8n:
  enabled: true
  image:
    repository: n8nio/n8n
    tag: "latest"
    pullPolicy: IfNotPresent

  auth:
    basicAuth:
      enabled: true
      user: "admin"
      password: "admin123"

  persistence:
    enabled: true
    size: 1Gi

  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "500m"

# MinIO object storage
minio:
  enabled: true
  image:
    repository: minio/minio
    tag: "latest"
    pullPolicy: IfNotPresent

  auth:
    rootUser: "minioadmin"
    rootPassword: "minioadmin123"

  persistence:
    enabled: true
    size: 10Gi

  buckets:
    - name: flood-predictions
      policy: public
    - name: flood-models
      policy: public

  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "500m"

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: flood-detection.local
      paths:
        - path: /
          pathType: Prefix
          service: flood-detection-frontend
        - path: /api
          pathType: Prefix
          service: flood-detection-backend
        - path: /n8n
          pathType: Prefix
          service: n8n
        - path: /minio
          pathType: Prefix
          service: minio
  tls: []

# Secrets
secrets:
  sentinelHub:
    clientId: ""
    clientSecret: ""
  minio:
    accessKey: "minioadmin"
    secretKey: "minioadmin123"